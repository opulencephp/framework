<?php
namespace {{namespace}};

use Opulence\Databases\IConnection;
use Opulence\Memcached\OpulenceMemcached;
use Opulence\Orm\DataMappers\MemcachedCachedSqlDataMapper;
use Opulence\Orm\OrmException;

class {{class}} extends MemcachedCachedSqlDataMapper
{
    /**
     * Adds an entity to the database
     *
     * @param object $entity The entity to add
     * @throws OrmException Thrown if the entity couldn't be added
     */
    public function add(&$entity)
    {

    }

    /**
     * Deletes an entity
     *
     * @param object $entity The entity to delete
     * @throws OrmException Thrown if the entity couldn't be deleted
     */
    public function delete(&$entity)
    {

    }

    /**
     * Gets all the entities
     *
     * @return object[] The list of all the entities
     */
    public function getAll() : array
    {

    }

    /**
     * Gets the entity with the input Id
     *
     * @param int|string $id The Id of the entity we're searching for
     * @return object The entity with the input Id
     * @throws OrmException Thrown if there was no entity with the input Id
     */
    public function getById($id)
    {

    }

    /**
     * Saves any changes made to an entity
     *
     * @param object $entity The entity to save
     * @throws OrmException Thrown if the entity couldn't be saved
     */
    public function update(&$entity)
    {

    }

    /**
     * Sets the cache data mapper to use in this repo
     *
     * @param OpulenceMemcached $cache The cache object used in the data mapper
     */
    protected function setCacheDataMapper($cache)
    {

    }

    /**
     * Sets the SQL data mapper to use in this repo
     *
     * @param IConnection $readConnection The read connection
     * @param IConnection $writeConnection The write connection
     */
    protected function setSqlDataMapper(IConnection $readConnection, IConnection $writeConnection)
    {

    }
}